{"ast":null,"code":"var _jsxFileName = \"/Users/ZACH/Desktop/react/cs50/exchange/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.makeSelection = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      }, this.recalculate);\n    };\n\n    this.changevalue = event => {\n      this.setState({\n        value: event.target.value,\n        converted: null\n      }, this.recalculate);\n    };\n\n    this.recalculate = () => {\n      const value = parseFloat(this.state.value);\n\n      if (isNaN(value)) {\n        return;\n      }\n\n      fetch(\"https://api.exchangeratesapi.io/latest?base=\".concat(this.state.base)).then(responce => responce.json()).then(data => {\n        this.setState({\n          converted: data.rates[this.state.other] * value\n        });\n      });\n    };\n\n    this.currencies = [\"AUD\", \"CAD\", \"CHF\", \"CNY\", \"INR\", \"USD\", \"EUR\", \"GBP\", \"JPY\", \"NZD\"];\n    this.state = {\n      base: \"USD\",\n      other: \"EUR\",\n      value: 0,\n      converted: 0\n    };\n    this.cached = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.makeSelection,\n      name: \"base\",\n      value: this.state.base,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.currencies.map(currency => React.createElement(\"option\", {\n      key: currency,\n      value: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, currency))), React.createElement(\"input\", {\n      value: this.state.value,\n      onChange: this.changevalue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.makeSelection,\n      name: \"other\",\n      value: this.state.other,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.currencies.map(currency => React.createElement(\"option\", {\n      key: currency,\n      value: currency,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, currency))), React.createElement(\"input\", {\n      disabled: true,\n      value: this.state.converted === null ? \"calculating...\" : this.state.converted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/ZACH/Desktop/react/cs50/exchange/src/index.js"],"names":["React","Component","ReactDOM","App","constructor","props","makeSelection","event","setState","target","name","value","recalculate","changevalue","converted","parseFloat","state","isNaN","fetch","base","then","responce","json","data","rates","other","currencies","cached","render","map","currency","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.currencies = [\n      \"AUD\",\n      \"CAD\",\n      \"CHF\",\n      \"CNY\",\n      \"INR\",\n      \"USD\",\n      \"EUR\",\n      \"GBP\",\n      \"JPY\",\n      \"NZD\"\n    ];\n    this.state = {\n      base: \"USD\",\n      other: \"EUR\",\n      value: 0,\n      converted: 0\n    };\n\n    this.cached = {};\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <select\n            onChange={this.makeSelection}\n            name=\"base\"\n            value={this.state.base}\n          >\n            {this.currencies.map(currency => (\n              <option key={currency} value={currency}>\n                {currency}\n              </option>\n            ))}\n          </select>\n          <input value={this.state.value} onChange={this.changevalue} />\n        </div>\n        <div>\n          <select\n            onChange={this.makeSelection}\n            name=\"other\"\n            value={this.state.other}\n          >\n            {this.currencies.map(currency => (\n              <option key={currency} value={currency}>\n                {currency}\n              </option>\n            ))}\n          </select>\n          <input\n            disabled={true}\n            value={\n              this.state.converted === null\n                ? \"calculating...\"\n                : this.state.converted\n            }\n          />\n        </div>\n      </div>\n    );\n  }\n\n  makeSelection = event => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value\n      },\n      this.recalculate\n    );\n  };\n\n  changevalue = event => {\n    this.setState(\n      {\n        value: event.target.value,\n        converted: null\n      },\n      this.recalculate\n    );\n  };\n\n  recalculate = () => {\n    const value = parseFloat(this.state.value);\n    if (isNaN(value)) {\n      return;\n    }\n    fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n      .then(responce => responce.json())\n      .then(data => {\n        this.setState({\n          converted: data.rates[this.state.other] * value\n        });\n      });\n  };\n}\n\nexport default App;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}